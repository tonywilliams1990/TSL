/* Tnewton - A class for using Newton's method for solving systems of nonlinear
			 equations of the form F(x) = 0 where x is a vector and F is vector
			 valued function. 
*/

#ifndef TNEWTON_H
#define TNEWTON_H

#include <cassert>

#include "Tvector.h"
#include "Tmatrix.h"
#include "Tresidual.h"

namespace TNoddy
{
	// Template Newton iteration class
	template <typename T>

	class Tnewton
	{
		private:
			Tresidual<T>* ptr_RESIDUAL;					// Pointer to the residual object
			std::size_t MAX_ITER;						// Maximum number of iterations
			double TOL;									// Tolerance in the iteration convergence test
			double DELTA;								// Derivative step
			std::size_t ORDER;							// Order of the system		

		public:

			/* ----- Constructors and destructors ----- */

			// Constructor
			Tnewton( Tresidual<T>* ptr_residual, std::size_t max_iter = 20,
					  double tolerance = 1.0e-8, double delta_step = 1.0e-8 );

			// Destructor
			~Tnewton();

			/* ----- Methods ----- */

			// Newton iterate using intial guess x_0 (stores the solution in x_0)
			void iterate( Tvector<T>& x_0 );


	}; // End of class Tnewton

} // End of namespace TNoddy

#endif
