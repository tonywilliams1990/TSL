// Test the Tequation class
#include <iostream>
#include "Tequation.h"

namespace TNoddy
{
	class test_equation : public Tequation<double>
	{
		public:
			// The test equation is 3rd order
			test_equation() : Tequation<double> ( 3 ) {} 

			// Define the equation
			void function( Tvector<double>& F, const Tvector<double>& u, const double& x ) const
			{
				F[ 0 ] = u[ 1 ];
				F[ 1 ] = u[ 2 ];
				F[ 2 ] = - u[ 0 ] * u[ 2 ];    
			}
	}; 
}

using namespace std;

int main()
{
    cout << "----- TESTING Tequation -----" << endl;

    /* ----- TESTING Tequation class ----- */	

	TNoddy::test_equation equation;			// Create an instance of the test_equation class
	cout << "equation.order(): " << equation.order() << endl;
	
	TNoddy::Tvector<double> F( 3, 0.0 );
	TNoddy::Tvector<double> u( { 2.0, 1.3, 7.0 } );
	double x = 0.0;
	
	// Call the function defined in the class
	cout << "F = " << F << endl;
	TNoddy::Tequation<double> *ptr_eqn;

	ptr_eqn = &equation;
	ptr_eqn->function( F, u, x );
	cout << "F = " << F << endl;	
	

    cout << "FINISHED" << endl;

}
