#include <cassert>
#include <cmath>

#include "Tnewton.h"
#include "Tresidual.h"

namespace TNoddy
{
	class test_residual : public Tresidual<double>
	{
		public:
			// The test equation is 2nd order
			test_residual() : Tresidual<double> ( 2 ) {} 

			// Define the equation
			void residual_fn( const Tvector<double>& x_k, Tvector<double>& F) const
			{
				F[ 0 ] = pow( x_k[ 0 ], 3.0 ) + x_k[ 1 ] - 1;
				F[ 1 ] = pow( x_k[ 1 ], 3.0 ) - x_k[ 0 ] + 1; 
				/*
					x^3 + y - 1 = 0,
					y^3 - x + 1 = 0,
					(x,y) = (1,0) is the only solution 
				*/
			}
	}; 
} 


using namespace TNoddy;
using namespace std;

int main()
{

    cout << "----- TESTING Tnewton class -----" << endl;

    /* ----- TESTING Tnewton class ----- */	
    test_residual my_residual;				                            // Create a residual object
    Tvector<double> x_0(2, 0.5);                                        // Initial guess
    x_0[1] = 0.25;	
    cout << "x_0 = " << x_0 << endl;

    Tnewton<double> newton( &my_residual );                             // Create a Tnewton object
    
    //newton.iterate( x_0 );
    newton.solve( x_0 );
    
    cout << "Solution = " << x_0 << endl;

	cout << "FINISHED" << endl;

}
