import os.path
import glob

Import( 'env opts incdir libdir topdir libs ' )

print "----- Building TSL codes -----"

# Testing codes

env.Program( 'Test/Matrix_test.out' , ['Test/Matrix_test.cpp'] , OPTS = opts, LIBS = libs)  #Matrix
env.Program( 'Test/Vector_test.out' , ['Test/Vector_test.cpp'] , OPTS = opts, LIBS = libs)  #Vector
env.Program( 'Test/LinSys_test.out' , ['Test/LinSys_test.cpp'] , OPTS = opts, LIBS = libs)  #Linear system
env.Program( 'Test/Sparse_test.out' , ['Test/Sparse_test.cpp'] , OPTS = opts, LIBS = libs)  #SparseMatrix
env.Program( 'Test/Residual_test.out' , ['Test/Residual_test.cpp'] , OPTS = opts, LIBS = libs)  #Residual
env.Program( 'Test/Newton_test.out' , ['Test/Newton_test.cpp'] , OPTS = opts, LIBS = libs)  #Newton
env.Program( 'Test/Node1D_test.out' , ['Test/Node1D_test.cpp'] , OPTS = opts, LIBS = libs)  #OneD_node_mesh
env.Program( 'Test/ODE_test.out' , ['Test/ODE_test.cpp'] , OPTS = opts, LIBS = libs)  #ODE_BVP
env.Program( 'Test/Eigen_test.out' , ['Test/Eigen_test.cpp'] , OPTS = opts, LIBS = libs)  #Eigensystem

# Project codes

env.Program( 'Project/Base_Flow_Transpiration.out' , ['Project/Base_Flow_Transpiration.cpp'] , OPTS = opts, LIBS = libs )
env.Program( 'Project/Eigenvalue_Problem.out' , ['Project/Eigenvalue_Problem.cpp'] , OPTS = opts, LIBS = libs )
env.Program( 'Project/General_Ridge.out' , ['Project/General_Ridge.cpp'] , OPTS = opts, LIBS = libs )
