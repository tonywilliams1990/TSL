import os.path
import glob

Import( 'env opts incdir libdir topdir libs ' )

print "----- Building TNoddy codes -----"

# Testing codes

env.Program( 'Test/Tvector_test.out' , ['Test/Tvector_test.cpp'] , OPTS = opts, LIBS = libs )         # Test Tvector
env.Program( 'Test/Tmatrix_test.out' , ['Test/Tmatrix_test.cpp'] , OPTS = opts, LIBS = libs )         # Test Tmatrix

env.Program( 'Test/Tsparsevec_test.out' , ['Test/Tsparsevec_test.cpp'] , OPTS = opts, LIBS = libs )   # Test Tsparse_vector
env.Program( 'Test/Tsparsemat_test.out' , ['Test/Tsparsemat_test.cpp'] , OPTS = opts, LIBS = libs )   # Test Tsparse_matrix

env.Program( 'Test/Tlinsys_test.out' , ['Test/Tlinsys_test.cpp'] , OPTS = opts, LIBS = libs )         # Test linear system solver

env.Program( 'Test/Tresidual_test.out' , ['Test/Tresidual_test.cpp'] , OPTS = opts, LIBS = libs )     # Test Tresidual
env.Program( 'Test/Tnewton_test.out' , ['Test/Tnewton_test.cpp'] , OPTS = opts, LIBS = libs )         # Test Tnewton
env.Program( 'Test/Timer_test.out' , ['Test/Timer_test.cpp'] , OPTS = opts, LIBS = libs )             # Test Timer

env.Program( 'Test/T1Dnode_test.out' , ['Test/T1Dnode_test.cpp'] , OPTS = opts, LIBS = libs )         # Test ToneD_node_mesh
env.Program( 'Test/Tode_bvp_test.out' , ['Test/Tode_bvp_test.cpp'] , OPTS = opts, LIBS = libs )       # Test Tode_bvp

env.Program( 'Test/Teigenvalue_test.out', ['Test/Teigenvalue_test.cpp'] , OPTS = opts, LIBS = libs )  # Test Teigenvalue
env.Program( 'Test/Harmonic_EVP.out', ['Test/Harmonic_EVP.cpp'] , OPTS = opts, LIBS = libs )          # Test Teigenvalue

# Project codes

env.Program( 'Project/Base_Flow_Transpiration.out' , ['Project/Base_Flow_Transpiration.cpp'] , OPTS = opts, LIBS = libs )
